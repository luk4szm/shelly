{% extends 'base.html.twig' %}

{% block title %}{{ parent() }}{% endblock %}

{% block body %}
    <div data-device-names="{{ devices|map((deviceData, name) => name)|join('|') }}"></div>
    <div class="container">
        <div class="row">
            {% for name, statuses in devices %}
                <div class="col-xl-4 col-md-6 col-12 g-3">
                    <div class="card">
                        <div class="card-header text-capitalize fw-bold">
                            {{ name }}
                        </div>
                        <div id="{{ name }}_device_card_body" class="card-body p-4">
                            {% for deviceStatus in statuses %}
                                {% if loop.first %}
                                    {% if deviceStatus.status == constant('App\\Model\\Status::ACTIVE') %}
                                        <button type="button" class="btn btn-success w-100 fw-bold mb-2" style="cursor: default">
                                            RUNNING
                                        </button>
                                    {% else %}
                                        <button type="button" class="btn btn-warning w-100 fw-bold mb-2" style="cursor: default">
                                            STANDBY
                                        </button>
                                    {% endif %}
                                    <br>Status duration:
                                    <span class="fw-bold current_status_duration">{{ deviceStatus.statusDuration|date("G:i:s") }}</span>
                                    <br>Current energy consumption: <b>{{ deviceStatus.lastValue }} W</b>
                                {% else %}
                                    <br>Duration of the previous status: <b>{{ deviceStatus.statusDuration|date("G:i:s") }}</b>
                                {% endif %}
                            {% else %}
                                <small>brak danych</small>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block body_javascripts %}
    <script>
        $(document).ready(function () {
            setInterval(refreshDeviceCards, 60000);

            function refreshDeviceCard(selector) {
                $(selector).load(location.href + " " + selector);
            }

            function refreshDeviceCards() {
                const deviceNamesString = $('[data-device-names]').data('device-names');
                const deviceNames = deviceNamesString.split('|');

                deviceNames.forEach(deviceName => {
                    const selector = `#${deviceName}_device_card_body`;
                    refreshDeviceCard(selector);
                });
            }

            $('.current_status_duration').each(function () {
                updateElapsedTime(this);
            });

            function updateElapsedTime(element) {
                let timeString = $(element).text();
                let parts = timeString.split(':');
                let hours = parseInt(parts[0], 10);
                let minutes = parseInt(parts[1], 10);
                let seconds = parseInt(parts[2], 10);

                function incrementTime() {
                    seconds++;
                    if (seconds >= 60) {
                        seconds = 0;
                        minutes++;
                        if (minutes >= 60) {
                            minutes = 0;
                            hours++;
                        }
                    }

                    // Formatowanie czasu do G:MM:SS
                    let formattedHours = hours.toString();
                    let formattedMinutes = minutes < 10 ? '0' + minutes : minutes.toString();
                    let formattedSeconds = seconds < 10 ? '0' + seconds : seconds.toString();

                    $(element).text(formattedHours + ':' + formattedMinutes + ':' + formattedSeconds);
                }

                setInterval(incrementTime, 1000); // Aktualizacja co sekundÄ™
            }
        });
    </script>
{% endblock %}
